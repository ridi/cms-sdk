{"version":3,"sources":["../../lib/UserAuth/index.js"],"names":["UserAuth","cmsClient","userId","isDev","Promise","resolve","reject","res","userAuth","method","checkUrl"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEMA,Q;AACF,wBAAc;AAAA;AAEb;;;;qCACYC,S,EAAWC,M,EAAQC,K,EAAO;AACnC,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAMC,MAAM,4BAAaN,SAAb,EAAwBC,MAAxB,EAAgCC,KAAhC,CAAZ;AACAE,wBAAQE,GAAR;AACH,aAHM,CAAP;AAIH;;;mCAEUC,Q,EAAUC,M,EAAQC,Q,EAAU;AACnC,mBAAO,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAMC,MAAM,yBAAUC,QAAV,EAAoBC,MAApB,EAA4BC,QAA5B,CAAZ;AACAL,wBAAQE,GAAR;AACH,aAHM,CAAP;AAIH;;;;;;kBAGUP,Q","file":"index.js","sourcesContent":["import ReadUserAuth from './ReadUserAuth'\nimport AuthCheck from './AuthCheck'\n\nclass UserAuth {\n    constructor() {\n        \n    }\n    readUserAuth(cmsClient, userId, isDev) {\n        return new Promise((resolve, reject) => {\n            const res = ReadUserAuth(cmsClient, userId, isDev);\n            resolve(res);\n        });\n    }\n\n    hasUrlAuth(userAuth, method, checkUrl) {\n        return new Promise((resolve, reject) => {\n            const res = AuthCheck(userAuth, method, checkUrl);\n            resolve(res);\n        });\n    }\n}\n\nexport default UserAuth;"]}